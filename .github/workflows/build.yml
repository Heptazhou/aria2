name: CI
on:
  - push
  - pull_request

# https://github.com/actions/virtual-environments
# https://github.com/actions/runner-images
jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        compiler:
          - gcc
          - clang

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Linux setup
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install \
            g++-12 \
            clang-15 \
            autoconf \
            automake \
            autotools-dev \
            autopoint \
            libtool \
            pkg-config \
            libssl-dev \
            libgnutls28-dev \
            libc-ares-dev \
            zlib1g-dev \
            libsqlite3-dev \
            libssh2-1-dev \
            libcppunit-dev
      - name: MacOS setup
        if: runner.os == 'macOS'
        run: |
          brew install cppunit gettext openssl libssh2 c-ares sqlite3 \
            autoconf automake pkg-config libtool
      - name: Setup clang
        if: matrix.compiler == 'clang'
        run: |
          echo "CC=clang"    >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
      - name: Setup gcc
        if: matrix.compiler == 'gcc'
        run: |
          echo "CC=gcc"  >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
      - name: Libtool
        run: |
          autoreconf -i
      - name: Setup compiler flags
        run: |
          asanflags="-fsanitize=address,undefined -fno-sanitize-recover=undefined"

          CPPFLAGS="$asanflags -g3"
          LDFLAGS="$asanflags"

          echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS"   >> $GITHUB_ENV
      - name: Configure autotools (Linux)
        if: runner.os == 'Linux'
        run: |
          ./configure --without-gnutls --with-openssl $FEATURE_FLAGS
      - name: Configure autotools (macOS)
        if: runner.os == 'macOS'
        run: |
          ./configure \
            --without-openssl --without-gnutls --with-appletls \
            --disable-nls
      - name: Build info
        run: |
          $CC  --version || gcc --version
          $CXX --version || g++ --version
      - name: Build aria2
        run: |
          make -j2
          make -j2 check
